import * as tslib_1 from "tslib";
import { NgModule } from "@angular/core";
import { CommonModule, DecimalPipe } from "@angular/common";
import { FormsModule, ReactiveFormsModule, FormBuilder } from "@angular/forms";
import { RxFormBuilder } from "./rx-form-builder";
import { RxwebFormDirective } from "../directives/rx-form.directive";
import { DecimalProvider } from "../domain/element-processor/decimal.provider";
import { HtmlControlTemplateDirective } from '../directives/html-control-template.directive';
import { ControlHostDirective } from '../directives/control-host.directive';
import { RxFormControlDirective } from "../directives/template-validations/rxformcontrol.directive";
import { FileControlDirective } from "../directives/template-validations/file-control.directive";
import { ImageFileControlDirective } from "../directives/template-validations/image-file-control.directive";
import { AsyncValidationDirective } from "../directives/template-validations/async-validation.directive";
import { defaultContainer } from "../core/defaultContainer";
import { TypedFormBuilder } from "./typed-form-builder";
import { ReactiveFormConfig } from "../util/reactive-form-config";
import * as ɵngcc0 from '@angular/core';
var RxReactiveFormsModule = /** @class */ (function () {
    function RxReactiveFormsModule() {
    }
    RxReactiveFormsModule_1 = RxReactiveFormsModule;
    RxReactiveFormsModule.forRoot = function () { return { ngModule: RxReactiveFormsModule_1, providers: [] }; };
    var RxReactiveFormsModule_1;
RxReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RxReactiveFormsModule });
RxReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RxReactiveFormsModule_Factory(t) { return new (t || RxReactiveFormsModule)(); }, providers: [RxFormBuilder, DecimalProvider, DecimalPipe], imports: [[CommonModule, FormsModule, ReactiveFormsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RxReactiveFormsModule, { declarations: function () { return [RxwebFormDirective, HtmlControlTemplateDirective, ControlHostDirective, RxFormControlDirective, FileControlDirective, ImageFileControlDirective, AsyncValidationDirective]; }, imports: function () { return [CommonModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [AsyncValidationDirective, RxwebFormDirective, HtmlControlTemplateDirective, RxFormControlDirective, FileControlDirective, ImageFileControlDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RxReactiveFormsModule, [{
        type: NgModule,
        args: [{
                declarations: [RxwebFormDirective, HtmlControlTemplateDirective, ControlHostDirective, RxFormControlDirective, FileControlDirective, ImageFileControlDirective, AsyncValidationDirective],
                imports: [CommonModule, FormsModule, ReactiveFormsModule],
                providers: [RxFormBuilder, DecimalProvider, DecimalPipe],
                exports: [AsyncValidationDirective, RxwebFormDirective, HtmlControlTemplateDirective, RxFormControlDirective, FileControlDirective, ImageFileControlDirective]
            }]
    }], function () { return []; }, null); })();
    return RxReactiveFormsModule;
}());
export { RxReactiveFormsModule };
// Experimental
var ReactiveTypedFormsModule = /** @class */ (function () {
    function ReactiveTypedFormsModule() {
        defaultContainer.isExperimental = true;
        ReactiveFormConfig.autoInstancePush = true;
    }
    ReactiveTypedFormsModule_1 = ReactiveTypedFormsModule;
    ReactiveTypedFormsModule.forRoot = function () { return { ngModule: ReactiveTypedFormsModule_1, providers: [] }; };
    var ReactiveTypedFormsModule_1;
    ReactiveTypedFormsModule = ReactiveTypedFormsModule_1 = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [])
    ], ReactiveTypedFormsModule);
ReactiveTypedFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveTypedFormsModule });
ReactiveTypedFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveTypedFormsModule_Factory(t) { return new (t || ReactiveTypedFormsModule)(); }, providers: [{ provide: FormBuilder, useClass: TypedFormBuilder }, TypedFormBuilder], imports: [[CommonModule, FormsModule, ReactiveFormsModule, RxReactiveFormsModule.forRoot()], ReactiveFormsModule, FormsModule, ReactiveFormsModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveTypedFormsModule, { imports: function () { return [CommonModule, FormsModule, ReactiveFormsModule, RxReactiveFormsModule]; }, exports: function () { return [ReactiveFormsModule, FormsModule, ReactiveFormsModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveTypedFormsModule, [{
        type: NgModule,
        args: [{
                declarations: [],
                imports: [CommonModule, FormsModule, ReactiveFormsModule, RxReactiveFormsModule.forRoot()],
                providers: [{ provide: FormBuilder, useClass: TypedFormBuilder }, TypedFormBuilder],
                exports: [ReactiveFormsModule, FormsModule, ReactiveFormsModule]
            }]
    }], function () { return []; }, null); })();
    return ReactiveTypedFormsModule;
}());
export { ReactiveTypedFormsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,